
services:
  # PostgreSQL Database (Internal only - not exposed to host)
  db:
    image: postgres:15-alpine
    container_name: countin-db
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-countin}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-countin}
      POSTGRES_DB: ${POSTGRES_DB:-countin}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-countin}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - countin-network
    restart: unless-stopped

  # FastAPI Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: countin-backend
    environment:
      DATABASE_URL: ${DATABASE_URL:-postgresql://countin:countin@db:5432/countin}
      ENV: ${ENV:-production}
      BACKEND_CORS_ORIGINS: ${BACKEND_CORS_ORIGINS:-https://countin.ignacio.tech,https://*.countin.ignacio.tech}
    expose:
      - "8000"
    depends_on:
      - db
    networks:
      - countin-network
    restart: unless-stopped

  # Frontend (Vite)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        VITE_API_URL: ${VITE_API_URL:-https://api.countin.ignacio.tech}
    container_name: countin-frontend
    expose:
      - "3000"
    depends_on:
      - backend
    networks:
      - countin-network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local

networks:
  countin-network:
    driver: bridge
